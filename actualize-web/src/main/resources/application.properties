#\u4FEE\u6539tomcat\u7684\u9ED8\u8BA4\u7684\u7AEF\u53E3\u53F7\uFF0C\u5C068080\u6539\u4E3A8888
server.port=8888
#thymeleaf start
spring.thymeleaf.mode=HTML5
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.content-type=text/html
#\u5F00\u53D1\u65F6\u5173\u95ED\u7F13\u5B58,\u4E0D\u7136\u6CA1\u6CD5\u770B\u5230\u5B9E\u65F6\u9875\u9762
spring.thymeleaf.cache=false
#thymeleaf end
server.context-path=/spring-boot
# \u6570\u636E\u5E93\u8BBF\u95EE\u914D\u7F6E
#\u60A6\u91C7\u6570\u636E\u6E90
spring.datasource.yuecai.type=${pom.spring.datasource.yuecai.type}
spring.datasource.yuecai.driver-class-name=${pom.spring.datasource.yuecai.driver-class-name}
spring.datasource.yuecai.url=${pom.spring.datasource.yuecai.url}
spring.datasource.yuecai.username=${pom.spring.datasource.yuecai.username}
spring.datasource.yuecai.password=${pom.spring.datasource.yuecai.password}
#ACL\u6570\u636E\u6E90
spring.datasource.acl.type=${pom.spring.datasource.acl.type}
spring.datasource.acl.driver-class-name=${pom.spring.datasource.acl.driver-class-name}
spring.datasource.acl.url=${pom.spring.datasource.acl.url}
spring.datasource.acl.username=${pom.spring.datasource.acl.username}
spring.datasource.acl.password=${pom.spring.datasource.acl.password}
#unireg(\u4E2D\u5FC3\u5E93)\u6570\u636E\u6E90
spring.datasource.unireg.type=${pom.spring.datasource.unireg.type}
spring.datasource.unireg.driver-class-name=${pom.spring.datasource.unireg.driver-class-name}
spring.datasource.unireg.url=${pom.spring.datasource.unireg.url}
spring.datasource.unireg.username=${pom.spring.datasource.unireg.username}
spring.datasource.unireg.password=${pom.spring.datasource.unireg.password}

#approve(\u4E2D\u5FC3\u5E93)\u6570\u636E\u6E90
spring.datasource.approve.type=${pom.spring.datasource.approve.type}
spring.datasource.approve.driver-class-name=${pom.spring.datasource.approve.driver-class-name}
spring.datasource.approve.url=${pom.spring.datasource.approve.url}
spring.datasource.approve.username=${pom.spring.datasource.approve.username}
spring.datasource.approve.password=${pom.spring.datasource.approve.password}

# dubbo \u6CE8\u518C\u4E2D\u5FC3\u5730\u5740
#dubbo.registry.address = ${pom.dubbo.registry.address}
#purchase\u6570\u636E\u6E90[\u914D\u7F6E\u7684\u6570\u636E\u5E93\u4E3A\u672C\u5730\u6570\u636E\u5E93\uFF0C\u5177\u4F53\u8868\u5B57\u6BB5\u548C\u8FC1\u79FB\u5E93\u672A\u5B9A\uFF0C\u5F85\u4FEE\u6539]
#spring.datasource.purchase.type=${pom.spring.datasource.purchase.type}
#spring.datasource.purchase.driver-class-name=${pom.spring.datasource.purchase.driver-class-name}
#spring.datasource.purchase.url=${pom.spring.datasource.purchase.url}
#spring.datasource.purchase.username=${pom.spring.datasource.purchase.username}
#spring.datasource.purchase.password=${pom.spring.datasource.purchase.password}

# \u4E0B\u9762\u4E3A\u8FDE\u63A5\u6C60\u7684\u8865\u5145\u8BBE\u7F6E\uFF0C\u5E94\u7528\u5230\u4E0A\u9762\u6240\u6709\u6570\u636E\u6E90\u4E2D
# \u521D\u59CB\u5316\u5927\u5C0F\uFF0C\u6700\u5C0F\uFF0C\u6700\u5927
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# \u914D\u7F6E\u83B7\u53D6\u8FDE\u63A5\u7B49\u5F85\u8D85\u65F6\u7684\u65F6\u95F4
spring.datasource.maxWait=60000
# \u914D\u7F6E\u95F4\u9694\u591A\u4E45\u624D\u8FDB\u884C\u4E00\u6B21\u68C0\u6D4B\uFF0C\u68C0\u6D4B\u9700\u8981\u5173\u95ED\u7684\u7A7A\u95F2\u8FDE\u63A5\uFF0C\u5355\u4F4D\u662F\u6BEB\u79D2
spring.datasource.timeBetweenEvictionRunsMillis=60000
# \u914D\u7F6E\u4E00\u4E2A\u8FDE\u63A5\u5728\u6C60\u4E2D\u6700\u5C0F\u751F\u5B58\u7684\u65F6\u95F4\uFF0C\u5355\u4F4D\u662F\u6BEB\u79D2
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# \u6253\u5F00PSCache\uFF0C\u5E76\u4E14\u6307\u5B9A\u6BCF\u4E2A\u8FDE\u63A5\u4E0APSCache\u7684\u5927\u5C0F
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# \u914D\u7F6E\u76D1\u63A7\u7EDF\u8BA1\u62E6\u622A\u7684filters\uFF0C\u53BB\u6389\u540E\u76D1\u63A7\u754C\u9762sql\u65E0\u6CD5\u7EDF\u8BA1\uFF0C'wall'\u7528\u4E8E\u9632\u706B\u5899
spring.datasource.filters=stat,wall,log4j
# \u901A\u8FC7connectProperties\u5C5E\u6027\u6765\u6253\u5F00mergeSql\u529F\u80FD\uFF1B\u6162SQL\u8BB0\u5F55
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# \u5408\u5E76\u591A\u4E2ADruidDataSource\u7684\u76D1\u63A7\u6570\u636E
#spring.datasource.useGlobalDataSourceStat=true
logging.level.root=INFO
#\u9875\u9762\u652F\u6301jsp
# \u9875\u9762\u9ED8\u8BA4\u524D\u7F00\u76EE\u5F55
#spring.mvc.view.prefix=/WEB-INF/jsp/
# \u54CD\u5E94\u9875\u9762\u9ED8\u8BA4\u540E\u7F00
#spring.mvc.view.suffix=.jsp
# \u81EA\u5B9A\u4E49\u5C5E\u6027\uFF0C\u53EF\u4EE5\u5728Controller\u4E2D\u8BFB\u53D6
#application.hello=Hello Angel From application