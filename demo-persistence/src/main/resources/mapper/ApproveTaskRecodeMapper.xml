<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.persistence.dao.ApproveTaskRecodeMapper">
  <resultMap id="BaseResultMap" type="com.demo.model.ApproveTaskRecode">
    <id column="id" jdbcType="BIGINT" property="id" />
    <id column="company_id" jdbcType="BIGINT" property="companyId" />
    <result column="proc_instance_id" jdbcType="VARCHAR" property="procInstanceId" />
    <result column="task_id" jdbcType="VARCHAR" property="taskId" />
    <result column="task_def_key" jdbcType="VARCHAR" property="taskDefKey" />
    <result column="assign" jdbcType="VARCHAR" property="assign" />
    <result column="current_node_index" jdbcType="TINYINT" property="currentNodeIndex" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="mult_instance" jdbcType="TINYINT" property="multInstance" />
    <result column="approve_suggestion" jdbcType="VARCHAR" property="approveSuggestion" />
    <result column="approve_type" jdbcType="BIT" property="approveType" />
    <result column="approve_time" jdbcType="TIMESTAMP" property="approveTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user_id" jdbcType="BIGINT" property="createUserId" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user_id" jdbcType="BIGINT" property="updateUserId" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="custom_id" jdbcType="BIGINT" property="customId" />
    <result column="supplier_ids" jdbcType="VARCHAR" property="supplierIds" />
    <result column="supplier_id" jdbcType="BIGINT" property="supplierId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, company_id, proc_instance_id, task_id, task_def_key, assign, current_node_index, 
    type, status, mult_instance, approve_suggestion, approve_type, approve_time, create_time, 
    create_user_id, update_time, update_user_id, description, custom_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="com.demo.model.ApproveTaskRecodeKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from approve_task_recode
    where id = #{id,jdbcType=BIGINT}
      and company_id = #{companyId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.demo.model.ApproveTaskRecodeKey">
    delete from approve_task_recode
    where id = #{id,jdbcType=BIGINT}
      and company_id = #{companyId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.demo.model.ApproveTaskRecode">
    insert into approve_task_recode (id, company_id, proc_instance_id, 
      task_id, task_def_key, assign, 
      current_node_index, type, status, 
      mult_instance, approve_suggestion, approve_type, 
      approve_time, create_time, create_user_id, 
      update_time, update_user_id, description, 
      custom_id)
    values (#{id,jdbcType=BIGINT}, #{companyId,jdbcType=BIGINT}, #{procInstanceId,jdbcType=VARCHAR}, 
      #{taskId,jdbcType=VARCHAR}, #{taskDefKey,jdbcType=VARCHAR}, #{assign,jdbcType=VARCHAR}, 
      #{currentNodeIndex,jdbcType=TINYINT}, #{type,jdbcType=TINYINT}, #{status,jdbcType=TINYINT}, 
      #{multInstance,jdbcType=TINYINT}, #{approveSuggestion,jdbcType=VARCHAR}, #{approveType,jdbcType=BIT}, 
      #{approveTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=BIGINT}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{updateUserId,jdbcType=BIGINT}, #{description,jdbcType=VARCHAR}, 
      #{customId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.demo.model.ApproveTaskRecode">
    insert into approve_task_recode
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
      <if test="procInstanceId != null">
        proc_instance_id,
      </if>
      <if test="taskId != null">
        task_id,
      </if>
      <if test="taskDefKey != null">
        task_def_key,
      </if>
      <if test="assign != null">
        assign,
      </if>
      <if test="currentNodeIndex != null">
        current_node_index,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="multInstance != null">
        mult_instance,
      </if>
      <if test="approveSuggestion != null">
        approve_suggestion,
      </if>
      <if test="approveType != null">
        approve_type,
      </if>
      <if test="approveTime != null">
        approve_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUserId != null">
        update_user_id,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="customId != null">
        custom_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=BIGINT},
      </if>
      <if test="procInstanceId != null">
        #{procInstanceId,jdbcType=VARCHAR},
      </if>
      <if test="taskId != null">
        #{taskId,jdbcType=VARCHAR},
      </if>
      <if test="taskDefKey != null">
        #{taskDefKey,jdbcType=VARCHAR},
      </if>
      <if test="assign != null">
        #{assign,jdbcType=VARCHAR},
      </if>
      <if test="currentNodeIndex != null">
        #{currentNodeIndex,jdbcType=TINYINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="multInstance != null">
        #{multInstance,jdbcType=TINYINT},
      </if>
      <if test="approveSuggestion != null">
        #{approveSuggestion,jdbcType=VARCHAR},
      </if>
      <if test="approveType != null">
        #{approveType,jdbcType=BIT},
      </if>
      <if test="approveTime != null">
        #{approveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null">
        #{updateUserId,jdbcType=BIGINT},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="customId != null">
        #{customId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.demo.model.ApproveTaskRecode">
    update approve_task_recode
    <set>
      <if test="procInstanceId != null">
        proc_instance_id = #{procInstanceId,jdbcType=VARCHAR},
      </if>
      <if test="taskId != null">
        task_id = #{taskId,jdbcType=VARCHAR},
      </if>
      <if test="taskDefKey != null">
        task_def_key = #{taskDefKey,jdbcType=VARCHAR},
      </if>
      <if test="assign != null">
        assign = #{assign,jdbcType=VARCHAR},
      </if>
      <if test="currentNodeIndex != null">
        current_node_index = #{currentNodeIndex,jdbcType=TINYINT},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="multInstance != null">
        mult_instance = #{multInstance,jdbcType=TINYINT},
      </if>
      <if test="approveSuggestion != null">
        approve_suggestion = #{approveSuggestion,jdbcType=VARCHAR},
      </if>
      <if test="approveType != null">
        approve_type = #{approveType,jdbcType=BIT},
      </if>
      <if test="approveTime != null">
        approve_time = #{approveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null">
        update_user_id = #{updateUserId,jdbcType=BIGINT},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="customId != null">
        custom_id = #{customId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
      and company_id = #{companyId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.demo.model.ApproveTaskRecode">
    update approve_task_recode
    set proc_instance_id = #{procInstanceId,jdbcType=VARCHAR},
      task_id = #{taskId,jdbcType=VARCHAR},
      task_def_key = #{taskDefKey,jdbcType=VARCHAR},
      assign = #{assign,jdbcType=VARCHAR},
      current_node_index = #{currentNodeIndex,jdbcType=TINYINT},
      type = #{type,jdbcType=TINYINT},
      status = #{status,jdbcType=TINYINT},
      mult_instance = #{multInstance,jdbcType=TINYINT},
      approve_suggestion = #{approveSuggestion,jdbcType=VARCHAR},
      approve_type = #{approveType,jdbcType=BIT},
      approve_time = #{approveTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user_id = #{updateUserId,jdbcType=BIGINT},
      description = #{description,jdbcType=VARCHAR},
      custom_id = #{customId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
      and company_id = #{companyId,jdbcType=BIGINT}
  </update>
  <select id="concatSupplierId" parameterType="long" resultType="string">
    SELECT
      GROUP_CONCAT(supplier_id)
    FROM
      `supplier`
    WHERE
      company_id = #{companyId}
    GROUP BY company_id;
  </select>
  <select id="selTaskRecodeBySupplierIds" resultMap="BaseResultMap" parameterType="map">
    select DISTINCT atr.*,bcsa.supplier_id from approve_task_recode atr
                                                  inner join approving  a on a.proc_inst_id = atr.proc_instance_id and a.company_id=atr.company_id
                                                  inner join bsm_company_supplier_apply bcsa on bcsa.supplier_id=a.project_id and bcsa.company_id = a.company_id
    where bcsa.supplier_id in(${supplierIds}) and bcsa.company_id = #{companyId,jdbcType=BIGINT} and a.module_node_type = 80
  </select>
</mapper>