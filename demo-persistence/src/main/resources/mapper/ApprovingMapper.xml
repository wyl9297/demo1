<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.demo.persistence.dao.ApprovingMapper" >
  <resultMap id="BaseResultMap" type="com.demo.model.Approving" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <id column="company_id" property="companyId" jdbcType="BIGINT" />
    <result column="project_id" property="projectId" jdbcType="BIGINT" />
    <result column="project_no" property="projectNo" jdbcType="VARCHAR" />
    <result column="project_name" property="projectName" jdbcType="VARCHAR" />
    <result column="project_create_user_id" property="projectCreateUserId" jdbcType="BIGINT" />
    <result column="project_create_user_name" property="projectCreateUserName" jdbcType="VARCHAR" />
    <result column="project_create_time" property="projectCreateTime" jdbcType="TIMESTAMP" />
    <result column="module" property="module" jdbcType="BIT" />
    <result column="module_node_type" property="moduleNodeType" jdbcType="TINYINT" />
    <result column="create_user_id" property="createUserId" jdbcType="BIGINT" />
    <result column="proc_inst_id" property="procInstId" jdbcType="VARCHAR" />
    <result column="custom_id" property="customId" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="approve_status" property="approveStatus" jdbcType="TINYINT" />
    <result column="project_status" property="projectStatus" jdbcType="TINYINT" />
    <result column="is_history_project" property="isHistoryProject" jdbcType="BIT" />
    <result column="is_solve_data" property="isSolveData" jdbcType="BIT" />
    <result column="approve_result" property="approveResult" jdbcType="TINYINT" />
    <result column="custom_version" property="customVersion" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, company_id, project_id, project_no, project_name, project_create_user_id, project_create_user_name, 
    project_create_time, module, module_node_type, create_user_id, proc_inst_id, custom_id, 
    create_time, approve_status, project_status, is_history_project, is_solve_data, approve_result, 
    custom_version
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.demo.model.ApprovingKey" >
    select 
    <include refid="Base_Column_List" />
    from approving
    where id = #{id,jdbcType=BIGINT}
      and company_id = #{companyId,jdbcType=BIGINT}
  </select>
  <select id="selApproveBySupplierIds" resultMap="BaseResultMap" parameterType="java.util.List" >
    select
    <include refid="Base_Column_List" />
    from approving
    where proc_inst_id in
    <foreach item="item" index="index" collection="supplierIds" open="(" separator="," close=")">
      #{supplierIds.supplierId}
    </foreach>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.demo.model.ApprovingKey" >
    delete from approving
    where id = #{id,jdbcType=BIGINT}
      and company_id = #{companyId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.demo.model.Approving" >
    insert into approving (id, company_id, project_id, 
      project_no, project_name, project_create_user_id, 
      project_create_user_name, project_create_time, 
      module, module_node_type, create_user_id, 
      proc_inst_id, custom_id, create_time, 
      approve_status, project_status, is_history_project, 
      is_solve_data, approve_result, custom_version
      )
    values (#{id,jdbcType=BIGINT}, #{companyId,jdbcType=BIGINT}, #{projectId,jdbcType=BIGINT}, 
      #{projectNo,jdbcType=VARCHAR}, #{projectName,jdbcType=VARCHAR}, #{projectCreateUserId,jdbcType=BIGINT}, 
      #{projectCreateUserName,jdbcType=VARCHAR}, #{projectCreateTime,jdbcType=TIMESTAMP}, 
      #{module,jdbcType=BIT}, #{moduleNodeType,jdbcType=TINYINT}, #{createUserId,jdbcType=BIGINT}, 
      #{procInstId,jdbcType=VARCHAR}, #{customId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{approveStatus,jdbcType=TINYINT}, #{projectStatus,jdbcType=TINYINT}, #{isHistoryProject,jdbcType=BIT}, 
      #{isSolveData,jdbcType=BIT}, #{approveResult,jdbcType=TINYINT}, #{customVersion,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.demo.model.Approving" >
    insert into approving
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="companyId != null" >
        company_id,
      </if>
      <if test="projectId != null" >
        project_id,
      </if>
      <if test="projectNo != null" >
        project_no,
      </if>
      <if test="projectName != null" >
        project_name,
      </if>
      <if test="projectCreateUserId != null" >
        project_create_user_id,
      </if>
      <if test="projectCreateUserName != null" >
        project_create_user_name,
      </if>
      <if test="projectCreateTime != null" >
        project_create_time,
      </if>
      <if test="module != null" >
        module,
      </if>
      <if test="moduleNodeType != null" >
        module_node_type,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="procInstId != null" >
        proc_inst_id,
      </if>
      <if test="customId != null" >
        custom_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="approveStatus != null" >
        approve_status,
      </if>
      <if test="projectStatus != null" >
        project_status,
      </if>
      <if test="isHistoryProject != null" >
        is_history_project,
      </if>
      <if test="isSolveData != null" >
        is_solve_data,
      </if>
      <if test="approveResult != null" >
        approve_result,
      </if>
      <if test="customVersion != null" >
        custom_version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="companyId != null" >
        #{companyId,jdbcType=BIGINT},
      </if>
      <if test="projectId != null" >
        #{projectId,jdbcType=BIGINT},
      </if>
      <if test="projectNo != null" >
        #{projectNo,jdbcType=VARCHAR},
      </if>
      <if test="projectName != null" >
        #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="projectCreateUserId != null" >
        #{projectCreateUserId,jdbcType=BIGINT},
      </if>
      <if test="projectCreateUserName != null" >
        #{projectCreateUserName,jdbcType=VARCHAR},
      </if>
      <if test="projectCreateTime != null" >
        #{projectCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="module != null" >
        #{module,jdbcType=BIT},
      </if>
      <if test="moduleNodeType != null" >
        #{moduleNodeType,jdbcType=TINYINT},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="procInstId != null" >
        #{procInstId,jdbcType=VARCHAR},
      </if>
      <if test="customId != null" >
        #{customId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="approveStatus != null" >
        #{approveStatus,jdbcType=TINYINT},
      </if>
      <if test="projectStatus != null" >
        #{projectStatus,jdbcType=TINYINT},
      </if>
      <if test="isHistoryProject != null" >
        #{isHistoryProject,jdbcType=BIT},
      </if>
      <if test="isSolveData != null" >
        #{isSolveData,jdbcType=BIT},
      </if>
      <if test="approveResult != null" >
        #{approveResult,jdbcType=TINYINT},
      </if>
      <if test="customVersion != null" >
        #{customVersion,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.demo.model.Approving" >
    update approving
    <set >
      <if test="projectId != null" >
        project_id = #{projectId,jdbcType=BIGINT},
      </if>
      <if test="projectNo != null" >
        project_no = #{projectNo,jdbcType=VARCHAR},
      </if>
      <if test="projectName != null" >
        project_name = #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="projectCreateUserId != null" >
        project_create_user_id = #{projectCreateUserId,jdbcType=BIGINT},
      </if>
      <if test="projectCreateUserName != null" >
        project_create_user_name = #{projectCreateUserName,jdbcType=VARCHAR},
      </if>
      <if test="projectCreateTime != null" >
        project_create_time = #{projectCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="module != null" >
        module = #{module,jdbcType=BIT},
      </if>
      <if test="moduleNodeType != null" >
        module_node_type = #{moduleNodeType,jdbcType=TINYINT},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="procInstId != null" >
        proc_inst_id = #{procInstId,jdbcType=VARCHAR},
      </if>
      <if test="customId != null" >
        custom_id = #{customId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="approveStatus != null" >
        approve_status = #{approveStatus,jdbcType=TINYINT},
      </if>
      <if test="projectStatus != null" >
        project_status = #{projectStatus,jdbcType=TINYINT},
      </if>
      <if test="isHistoryProject != null" >
        is_history_project = #{isHistoryProject,jdbcType=BIT},
      </if>
      <if test="isSolveData != null" >
        is_solve_data = #{isSolveData,jdbcType=BIT},
      </if>
      <if test="approveResult != null" >
        approve_result = #{approveResult,jdbcType=TINYINT},
      </if>
      <if test="customVersion != null" >
        custom_version = #{customVersion,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
      and company_id = #{companyId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.demo.model.Approving" >
    update approving
    set project_id = #{projectId,jdbcType=BIGINT},
      project_no = #{projectNo,jdbcType=VARCHAR},
      project_name = #{projectName,jdbcType=VARCHAR},
      project_create_user_id = #{projectCreateUserId,jdbcType=BIGINT},
      project_create_user_name = #{projectCreateUserName,jdbcType=VARCHAR},
      project_create_time = #{projectCreateTime,jdbcType=TIMESTAMP},
      module = #{module,jdbcType=BIT},
      module_node_type = #{moduleNodeType,jdbcType=TINYINT},
      create_user_id = #{createUserId,jdbcType=BIGINT},
      proc_inst_id = #{procInstId,jdbcType=VARCHAR},
      custom_id = #{customId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      approve_status = #{approveStatus,jdbcType=TINYINT},
      project_status = #{projectStatus,jdbcType=TINYINT},
      is_history_project = #{isHistoryProject,jdbcType=BIT},
      is_solve_data = #{isSolveData,jdbcType=BIT},
      approve_result = #{approveResult,jdbcType=TINYINT},
      custom_version = #{customVersion,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
      and company_id = #{companyId,jdbcType=BIGINT}
  </update>
</mapper>